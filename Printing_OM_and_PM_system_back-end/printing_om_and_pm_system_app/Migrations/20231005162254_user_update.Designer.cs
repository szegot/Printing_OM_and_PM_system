// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using printing_om_and_pm_system_app.Db;

#nullable disable

namespace printing_om_and_pm_system_app.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231005162254_user_update")]
    partial class user_update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Item", b =>
                {
                    b.Property<int>("Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Item_ID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.ItemService", b =>
                {
                    b.Property<int>("Item_Service_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Item_ID")
                        .HasColumnType("int");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.HasKey("Item_Service_ID");

                    b.HasIndex("Item_ID");

                    b.HasIndex("Service_ID");

                    b.ToTable("ItemServices");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Machine", b =>
                {
                    b.Property<int>("Machine_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Machine_ID");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Material", b =>
                {
                    b.Property<int>("Material_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Material_ID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Order", b =>
                {
                    b.Property<int>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Order_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.OrderItem", b =>
                {
                    b.Property<int>("Order_Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Item_ID")
                        .HasColumnType("int");

                    b.Property<int>("Order_ID")
                        .HasColumnType("int");

                    b.HasKey("Order_Item_ID");

                    b.HasIndex("Item_ID");

                    b.HasIndex("Order_ID");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Process", b =>
                {
                    b.Property<int>("Process_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Process_ID");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.ProcessService", b =>
                {
                    b.Property<int>("Process_Service_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Process_ID")
                        .HasColumnType("int");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Process_Service_ID");

                    b.HasIndex("Process_ID");

                    b.HasIndex("Service_ID");

                    b.ToTable("ProcessServices");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Service", b =>
                {
                    b.Property<int>("Service_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Completion_Time")
                        .HasColumnType("int");

                    b.Property<int>("Machine_ID")
                        .HasColumnType("int");

                    b.Property<int>("Material_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Service_ID");

                    b.HasIndex("Machine_ID");

                    b.HasIndex("Material_ID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BillingCity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BillingZipCode")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("User_ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.ItemService", b =>
                {
                    b.HasOne("printing_om_and_pm_system_app.Models.Item", "Items")
                        .WithMany("ItemServices")
                        .HasForeignKey("Item_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("printing_om_and_pm_system_app.Models.Service", "Services")
                        .WithMany("ItemServices")
                        .HasForeignKey("Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Order", b =>
                {
                    b.HasOne("printing_om_and_pm_system_app.Models.User", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.OrderItem", b =>
                {
                    b.HasOne("printing_om_and_pm_system_app.Models.Item", "Items")
                        .WithMany("OrderItems")
                        .HasForeignKey("Item_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("printing_om_and_pm_system_app.Models.Order", "Orders")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.ProcessService", b =>
                {
                    b.HasOne("printing_om_and_pm_system_app.Models.Process", "Processes")
                        .WithMany("ProcessServices")
                        .HasForeignKey("Process_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("printing_om_and_pm_system_app.Models.Service", "Services")
                        .WithMany("ProcessServices")
                        .HasForeignKey("Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Processes");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Service", b =>
                {
                    b.HasOne("printing_om_and_pm_system_app.Models.Machine", "Machines")
                        .WithMany("Services")
                        .HasForeignKey("Machine_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("printing_om_and_pm_system_app.Models.Material", "Materials")
                        .WithMany("Services")
                        .HasForeignKey("Material_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machines");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Item", b =>
                {
                    b.Navigation("ItemServices");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Machine", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Material", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Process", b =>
                {
                    b.Navigation("ProcessServices");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.Service", b =>
                {
                    b.Navigation("ItemServices");

                    b.Navigation("ProcessServices");
                });

            modelBuilder.Entity("printing_om_and_pm_system_app.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
